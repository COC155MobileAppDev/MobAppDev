<!-- A DrawerLayout is intended to be used as the top-level content view using match_parent for both width and height to consume the full space available. -->
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:id="@+id/drawer_layout"
    android:layout_width="match_parent" android:layout_height="match_parent"
    tools:context=".MainActivity">

    <!-- As the main content view, the view below consumes the entire
         space available using match_parent in both dimensions. -->


    <LinearLayout android:id="@+id/container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="4"
        android:orientation="vertical">

        <!-- Main Activity View's Content-->
        <android.support.v4.app.FragmentTabHost
            android:id="@+id/fTabHost"
            android:layout_height="wrap_content"
            android:layout_width="fill_parent"
            android:layout_weight="1">

            <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="fill_parent"
                android:orientation="vertical">

                <TabWidget
                    android:id="@+id/tabWidget"
                    android:layout_width="fill_parent"
                    android:layout_height="wrap_content"
                    android:layout_gravity="bottom" />

                <FrameLayout
                    android:id="@+id/tabContent"
                    android:layout_width="fill_parent"
                    android:layout_height="0dp"
                    android:layout_weight="1"
                    android:layout_marginTop="48dp"/>

                <!--android:layout_marginTop="48dp"-->


            </LinearLayout>

        </android.support.v4.app.FragmentTabHost>

        <View
            android:background="@color/grey"
            android:layout_width="match_parent"
            android:layout_height="5dp"
            android:layout_below="@+id/fTabHost"/>

        <LinearLayout
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:background="@color/main_color"
                android:padding="10dp">
            <Button
                android:id="@+id/newModuleButton"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:text="@string/newModuleButton"
                android:onClick="onNewModuleButtonClick"
                android:background="@drawable/white_button"
                style="@style/button_white_text"/>
            <Button
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:text="SESSION FROM NOTIFICATION"
                android:onClick="startNewSessionButton"
                android:background="@drawable/white_button"
                style="@style/button_white_text"/>

        </LinearLayout>



    </LinearLayout>




    <!-- android:layout_gravity="start" tells DrawerLayout to treat
         this as a sliding drawer on the left side for left-to-right
         languages and on the right side for right-to-left languages.
         If you're not building against API 17 or higher, use
         android:layout_gravity="left" instead. -->
    <!-- The drawer is given a fixed width in dp and extends the full height of
         the container. -->
    <fragment android:id="@+id/navigation_drawer"
        android:layout_width="@dimen/navigation_drawer_width" android:layout_height="match_parent"
        android:layout_gravity="start"
        android:name="com.example.team05.lecturec.ViewControllers.NavigationDrawerFragment"
        tools:layout="@layout/fragment_navigation_drawer" />

</android.support.v4.widget.DrawerLayout>
